{"version":3,"sources":["components/steamApi.js","pages/Home/Home.js","pages/About/About.js","App.js","index.js"],"names":["SteamApi","apiKey","croppingLinks","link","slice","lastIndexOf","this","url","a","_sendRequest","generalInterface","method","version","query","result","response","steamid","steamID","players","appID","friendslist","console","log","fetch","request","json","responseInJSON","steamApiWrapper","ResultsList","data","map","item","info","personaname","realname","width","height","src","avatarfull","alt","id","CompareBlock","loader","LinksProfiles","number","change","value","numb","onChange","e","target","placeholder","Home","useState","isLoaded","setIsLoaded","profiles","initialState","state","setState","setInfo","array","s","res","index","Object","assign","setID","getInfo","clippingsUrls","Promise","all","isNaN","getSteamId","profilesIDs","getPlayerInfo","infoPlayers","getLibraryGames","libraryGames","getFriendListUser","friends","setURL","prevState","newState","useDataApi","watchState","useEffect","onClick","About","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd4da1b.chunk.js","sourcesContent":["class SteamApi {\r\n\tconstructor(apiKey) {\r\n\t\tthis.apiKey = apiKey;\r\n\t}\r\n\r\n\tcroppingLinks = (link) => {\r\n\t\tif (link === '') return;\r\n\t\treturn link.slice(link.lastIndexOf('/') + 1);\r\n\t};\r\n\r\n\tasync getSteamId(url) {\r\n\t\tconst result = await this._sendRequest({\r\n\t\t\tgeneralInterface: 'ISteamUser',\r\n\t\t\tmethod: 'ResolveVanityURL',\r\n\t\t\tversion: 'v0001',\r\n\t\t\tquery: `?key=${this.apiKey}&vanityurl=${url}`,\r\n\t\t});\r\n\t\treturn result.response.steamid;\r\n\t}\r\n\r\n\tasync getPlayerInfo(steamID) {\r\n\t\tconst result = await this._sendRequest({\r\n\t\t\tgeneralInterface: 'ISteamUser',\r\n\t\t\tmethod: 'GetPlayerSummaries',\r\n\t\t\tversion: 'v0002',\r\n\t\t\tquery: `?key=3F58E57C4B88ADCBCFCD824EFC80FCFB&steamids=${steamID}`,\r\n\t\t});\r\n\t\treturn result.response.players[0];\r\n\t}\r\n\r\n\tasync getFriendListUser(steamid, appID) {\r\n\t\tconst result = await this._sendRequest({\r\n\t\t\tgeneralInterface: 'ISteamUser',\r\n\t\t\tmethod: 'GetFriendList',\r\n\t\t\tversion: 'v0001',\r\n\t\t\tquery: `?key=${this.apiKey}&steamid=${steamid}&relationship=friend`,\r\n\t\t});\r\n\t\treturn result.friendslist;\r\n\t}\r\n\r\n\tasync getLibraryGames(steamid) {\r\n\t\tconsole.log(steamid);\r\n\t\tconst result = await this._sendRequest({\r\n\t\t\tgeneralInterface: 'IPlayerService',\r\n\t\t\tmethod: 'GetOwnedGames',\r\n\t\t\tversion: 'v0001',\r\n\t\t\tquery: `?key=${this.apiKey}&steamid=${steamid}&include_appinfo=true&format=json`,\r\n\t\t});\r\n\t\treturn result.response;\r\n\t}\r\n\r\n\tasync _sendRequest({ generalInterface, method, version, query }) {\r\n\t\tconst request = await fetch(\r\n\t\t\t`http://api.steampowered.com/${generalInterface}/${method}/${version}/${query}`\r\n\t\t);\r\n\t\tconst responseInJSON = await request.json();\r\n\t\tconst result = await responseInJSON;\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport default SteamApi;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SteamApi from '../../components/steamApi';\r\n\r\nconst steamApiWrapper = new SteamApi('3F58E57C4B88ADCBCFCD824EFC80FCFB');\r\n\r\nconst useDataApi = (initialState) => {\r\n\tconst [state, setState] = useState(initialState);\r\n\r\n\tconst setURL = (number, value) => {\r\n\t\tsetState((prevState) => {\r\n\t\t\tconst newState = [...prevState];\r\n\t\t\tnewState[number].url = value;\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t};\r\n\r\n\tconst setInfo = (array) => {\r\n\t\tsetState((s) =>\r\n\t\t\tarray.map((res, index) => ({\r\n\t\t\t\t...s[index],\r\n\t\t\t\tinfo: Object.assign(s[index].info, res),\r\n\t\t\t}))\r\n\t\t);\r\n\t};\r\n\r\n\tconst setID = (array) => {\r\n\t\tsetState((s) =>\r\n\t\t\tarray.map((res, index) => ({ ...s[index], steamid: res }))\r\n\t\t);\r\n\t};\r\n\r\n\tconst getInfo = async () => {\r\n\t\tconst clippingsUrls = state.map((item) =>\r\n\t\t\tsteamApiWrapper.croppingLinks(item.url)\r\n\t\t);\r\n\t\tconst profilesIDs = await Promise.all(\r\n\t\t\tclippingsUrls.map((item) =>\r\n\t\t\t\tisNaN(item) ? steamApiWrapper.getSteamId(item) : item\r\n\t\t\t)\r\n\t\t);\r\n\t\tconst infoPlayers = await Promise.all(\r\n\t\t\tprofilesIDs.map((item) => steamApiWrapper.getPlayerInfo(item))\r\n\t\t);\r\n\t\tconst libraryGames = await Promise.all(\r\n\t\t\tprofilesIDs.map((item) => steamApiWrapper.getLibraryGames(item))\r\n\t\t);\r\n\t\tconst friends = await Promise.all(\r\n\t\t\tprofilesIDs.map((item) => steamApiWrapper.getFriendListUser(item))\r\n\t\t);\r\n\r\n\t\tsetID(profilesIDs);\r\n\t\tsetInfo(infoPlayers);\r\n\t\tsetInfo(friends);\r\n\t\tsetInfo(libraryGames);\r\n\t};\r\n\r\n\treturn { state, setState, setURL, getInfo };\r\n};\r\n\r\nconst ResultsList = ({ data }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<br></br>\r\n\t\t\t<ul>\r\n\t\t\t\t{data.map((item) => (\r\n\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\tSteam url: {item.url}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tSteamid: {item.steamid}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tUsername: {item.info.personaname}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tReal name: {item.info.realname}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\tGames count: {item.info['game_count']}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\twidth='115px'\r\n\t\t\t\t\t\t\theight='115px'\r\n\t\t\t\t\t\t\tsrc={item.info.avatarfull}\r\n\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst CompareBlock = ({ data, loader }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<br></br>\r\n\t\t\t{loader ? <ResultsList data={data} /> : 'Not found'}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst LinksProfiles = ({ number, url, change }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\tvalue={url}\r\n\t\t\t\tnumb={number}\r\n\t\t\t\tonChange={(e) => change(number, e.target.value)}\r\n\t\t\t\tplaceholder='Enter your url steam profile'\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nfunction Home() {\r\n\tconst usersProfiles = [\r\n\t\t{ url: '', steamid: '', id: 1, info: {} },\r\n\t\t{ url: '', steamid: '', id: 2, info: {} },\r\n\t];\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\tconst profiles = useDataApi(usersProfiles);\r\n\tconst watchState = profiles.state.map((item) => item.steamid);\r\n\r\n\tuseEffect(() => {\r\n\t\twatchState.map((item) =>\r\n\t\t\titem ? setIsLoaded(true) : setIsLoaded(false)\r\n\t\t);\r\n\t}, [watchState]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Home page</h1>\r\n\t\t\t<LinksProfiles\r\n\t\t\t\tnumber={0}\r\n\t\t\t\turl={profiles.state[0].url}\r\n\t\t\t\tchange={profiles.setURL}\r\n\t\t\t/>\r\n\t\t\t<LinksProfiles\r\n\t\t\t\tnumber={1}\r\n\t\t\t\turl={profiles.state[1].url}\r\n\t\t\t\tchange={profiles.setURL}\r\n\t\t\t/>\r\n\t\t\t<button onClick={() => profiles.getInfo()}>Get</button>\r\n\t\t\t<CompareBlock data={profiles.state} loader={isLoaded} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\n\r\nfunction About() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>About page</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tNavLink,\r\n\tLink,\r\n\tRoute,\r\n\tuseRouteMatch,\r\n\tuseParams,\r\n} from 'react-router-dom';\r\nimport Home from './pages/Home/Home.js';\r\nimport About from './pages/About/About.js';\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path='/about' component={About} />\r\n\t\t\t\t\t<Route path='/' component={Home} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}